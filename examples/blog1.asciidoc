= {title}
:title:       Blog
:description: In this tutorial, we will learn how to display content like a blog page with 2 columns
:doctitle:    Example for Asciidoc-Bootstrap - {title}


== Basic Blog 

[role="lead"]
A basic blog layout with two columns: on left the post dates, and on right the post content.

Example of Asciidoc document. See source text
footnote:[https://raw.github.com/llaville/asciidoc-bootstrap-backend/master/examples/demo2.asciidoc].

In first post, we used :

* `role` attribute to customize css rules
* `citetitle` and `attribution` attributes to identify sources of article.
* asciidoc text formatting, for left column to show post date and possible tags. 

In second post, we used also :

* `role` attribute to customize css rules
* asciidoc text formatting, for left column to show post date and 
the image inline macro to illustrate article by a thumbnail.

We used additional css rules added by file +blog1.css+ to give such design.
[source,css]
----
include::blog1.css[]
----

== Result with flatly theme

Invoke the following command:
[source,bash]
----
$ asciidoc -b bootstrap -f /path/to/examples/demo2.conf -o blog1-sample.html /path/to/examples/demo2.asciidoc
----

And here are the final result that you should get.

image::images/screenshots/blog1-sample.png[link="blog1-sample.html",title="My Blog with flatly theme",role="thumbnail",options="align,responsive"]

== About options @to generate documents@

We reused and group all common attributes to generate documents in a standard asciidoc configuration file called `demo2.conf`.
..........................
[attributes]
linkcss
tocmmenu
numbered
lang=en
jumbotron
jumbotron-fullwidth
totop
theme=flatly
stylesheet=blog1.css
iconsfont=font-awesome
footer!
footer-fullwidth
..........................

include::gendocfile.asciidoc[]
